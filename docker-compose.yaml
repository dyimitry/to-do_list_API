version: "3.9"
services:
  postgres-db:
    image: postgres:13
    volumes:
      - postgres-db:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    env_file:
      - .env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 3s
      retries: 2

  migration:
    image: to_do_list_api
    command: alembic upgrade head
    depends_on:
      postgres-db:
        condition: service_healthy
    env_file:
      - .env_prod

  backend:
    image: to_do_list_api
    ports:
      - "8000:8000"
    depends_on:
      postgres-db:
        condition: service_healthy
      migration:
        condition: service_completed_successfully
    env_file:
      - .env_prod

  bot:
    image: to_do_list_api
    command: python bot.py
    depends_on:
      backend:
        condition: service_started
    env_file:
      - .env_prod

  rabbit:
    image: rabbitmq:3.12.8-management
    environment:
      - RABBITMQ_DEFAULT_USER=rmq_user
      - RABBITMQ_DEFAULT_PASS=rmq_password
    ports:
      - "15672:15672"
      - "5672:5672"
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 20s
      timeout: 10s
      retries: 3

  worker:
    image: to_do_list_api
    command: celery -A notification.engine worker -Q notification -l info
    env_file:
      - .env_prod
    depends_on:
      rabbit:
        condition: service_healthy
#  command: celery -A cele.engine:app_celery worker -Q notification -l info


  beat:
    image: to_do_list_api
    command: celery -A notification.engine beat --loglevel=INFO
    env_file:
      - .env_prod
    depends_on:
      rabbit:
        condition: service_healthy


volumes:
  postgres-db:

